@using Vereyon.Web
@model EnrolTraining.Models.CourseType
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script src="~/Scripts/edtr.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="/css/colorpicker.css" />
<link rel="stylesheet" type="text/css" href="~/css/layout.css" />
<script type="text/javascript" src="~/Scripts/colorpicker.js"></script>
<script type="text/javascript">
     var urlobj;
     function BrowseServer(obj)
     {
          urlobj = obj;
          OpenServerBrowser(
          '/index.html',
          screen.width * 0.7,
          screen.height * 0.7 ) ;
     }

     function OpenServerBrowser( url, width, height )
     {
          var iLeft = (screen.width - width) / 2 ;
          var iTop = (screen.height - height) / 2 ;
          var sOptions = "toolbar=no,status=no,resizable=yes,dependent=yes" ;
          sOptions += ",width=" + width ;
          sOptions += ",height=" + height ;
          sOptions += ",left=" + iLeft ;
          sOptions += ",top=" + iTop ;
          var oWindow = window.open( url, "BrowseWindow", sOptions ) ;
     }

     function SetUrl( url, width, height, alt )
     {
          document.getElementById(urlobj).value = url ;
          oWindow = null;
     }
</script>


<script>
    $(document).ready(function(e)
    {
        $('#ddAdOns').multiselect({
            nonSelectedText: 'Click to select',
            numberDisplayed: 5
        });

        $('.multiselect-native-select').css('height', '34px')
        $('.multiselect-native-select').css('display', 'block')

        $('#colorSelector').ColorPicker({
            color: '#0000ff',
            onShow: function (colpkr) {
                $(colpkr).fadeIn(500);
                return false;
            },
            onHide: function (colpkr) {
                $(colpkr).fadeOut(500);
                return false;
            },
            onChange: function (hsb, hex, rgb) {
                $('#colorSelector div').css('backgroundColor', '#' + hex);
                $('#CalendarIconColor').val('#' + hex);
            }
        });
    })
</script>

@*<script type="text/javascript">
    function RoxyFileBrowser(field_name, url, type, win) {
        var roxyFileman = '/Upload/Index';
        if (roxyFileman.indexOf("?") < 0) {
            roxyFileman += "?type=" + type;
        }
        else {
            roxyFileman += "&type=" + type;
        }
        roxyFileman += '&input=' + field_name + '&value=' + win.document.getElementById(field_name).value;
        if (tinyMCE.activeEditor.settings.language) {
            roxyFileman += '&langCode=' + tinyMCE.activeEditor.settings.language;
        }
        tinyMCE.activeEditor.windowManager.open({
            file: roxyFileman,
            title: 'Roxy Fileman',
            width: 850,
            height: 650,
            resizable: "yes",
            plugins: "media",
            inline: "yes",
            close_previous: "no"
        }, { window: win, input: field_name });
        return false;
    }
    $(document).ready(function () {
        tinymce.init({
            selector: "textarea",
            theme: "modern",
            paste_data_images: true,
            plugins: [
              "advlist autolink lists link image charmap print preview hr anchor pagebreak",
              "searchreplace wordcount visualblocks visualchars code fullscreen",
              "insertdatetime media nonbreaking save table contextmenu directionality",
              "emoticons template paste textcolor colorpicker textpattern"
            ],
            toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
            toolbar2: "print preview media | forecolor backcolor emoticons",
            image_advtab: true,
            file_browser_callback: function (field_name, url, type, win) {

                // from http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript
                var w = window,
	            d = document,
	            e = d.documentElement,
	            g = d.getElementsByTagName('body')[0],
	            x = w.innerWidth || e.clientWidth || g.clientWidth,
	            y = w.innerHeight || e.clientHeight || g.clientHeight;

                var cmsURL = '/Upload/Index?&field_name=' + field_name;

                //if (type == 'image') {
                //    cmsURL = cmsURL + "&type=images";
                //}

                tinyMCE.activeEditor.windowManager.open({
                    file: cmsURL,
                    title: 'Filemanager',
                    width: x * 0.8,
                    height: y * 0.8,
                    resizable: "yes",
                    close_previous: "no"
                });

            },
            templates: [{
                title: 'Test template 1',
                content: 'Test 1'
            }, {
                title: 'Test template 2',
                content: 'Test 2'
            }]
        });
    });
</script>*@

<div class='page-title'>
    <h1>Add / Edit Course Type</h1>
</div>


    <div class="FormWrapper">
        <div class="row">
            <div class="col-md-12">
                <section>
                    @using (Html.BeginForm("AddCourseType", "Admin", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                        @Html.RenderFlashMessages()
                        @*@Html.ValidationSummary(false, "", new { @class = "text-danger" })*@
                        @Html.Hidden("CourseTypeID", Model == null ? 0 : Model.CourseTypeID)
                        {
                            if (Model != null && Model.CourseTypeID > 0)
                            {
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CourseTypeID, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-9">
                                        <label style="padding-top:10px">
                                            @Html.DisplayFor(m => m.CourseTypeID, new { @class = "form-control" })
                                        </label>
                                    </div>
                                </div>

                            }
                        }


                        <div class="form-group">
                            @Html.LabelFor(m => m.CourseName, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.CourseName, new { @class = "form-control"})
                                @Html.ValidationMessageFor(m => m.CourseName, "", new { @class = "text-danger" })
                            </div>
                            @*<div class="col-md-10">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.CourseName, new { @class = "form-control", @aria_describedby = "postfix1" })
                                    <span class="input-group-addon" id="postfix1">.enrollware.com</span>                                    
                                </div>
                                @Html.ValidationMessageFor(m => m.CourseName, "", new { @class = "text-danger" })
                            </div>*@

                        </div>


                        <div class="form-group">
                            @Html.LabelFor(m => m.Type, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                <div style="border:1px solid lightgray; padding:10px 10px 0px 10px; border-radius:5px; background-color:white">
                                    <div class="radio" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.RadioButtonFor(m => m.Type, "ClassRoomSession", new { @style = "margin-top:1px;", @checked = "checked" })
                                            This course involve a classroom session or skills check
                                        </label>
                                    </div>
                                    <div class="radio" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.RadioButtonFor(m => m.Type, "NoClassRoomSession", new { @style = "margin-top:1px;" })
                                            There is no classroom session (e.g., online course)
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Discipline, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.Discipline, DropdownLists.Disciplines(Model == null ? "0" : Model.Discipline.ToString(), false), new { @class = "form-control" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(m => m.PriceOptions_IsAllowedRegistrationWithDeposit, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                <div style="border:1px solid lightgray; padding:10px 10px 0px 10px; border-radius:5px; background-color:white">
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.PriceOptions_IsAllowedRegistrationWithDeposit, new { @style = "margin-top:1px;" })
                                            Allow Registrations with a deposit
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.PriceOptions_IsAllowedMultiplePricingLevel, new { @style = "margin-top:1px;" })
                                            Allow Multiple Pricing Level
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Price, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Price, new { @class = "form-control NumberField" })
                                @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.AddonPrompt, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(m => m.AddonPrompt, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.AddOnIDs, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.AddOnIDs, DropdownLists.RegistrationAdOns(Model == null ? "0" : Model.AddOns, false, "Click to select"), new { @class = "form-control", @id = "ddAdOns", multiple = "multiple" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ShippingPrice, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.ShippingPrice, new { @class = "form-control NumberField" })
                                @Html.ValidationMessageFor(m => m.ShippingPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.KeycodeBankID, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.KeycodeBankID, DropdownLists.KeycodeBanks(Model == null ? "0" : Model.KeycodeBankID.ToString(), true, "None"), new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.CardOptionsID, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(m => m.CardOptionsID, DropdownLists.CardSettingProfiles(Model == null ? "0" : Model.CardOptionsID.ToString(), true, "None", false), new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Image, new { @class = "col-md-2 control-label" })
                            <div>
                                <div class="col-md-7">
                                    @Html.TextBoxFor(m => m.Image, new { @class = "form-control", @id = "ImageUrl" })
                                </div>
                                <div class="col-md-3">
                                    <button type="button" class="btn btn-default text-center" onclick="BrowseServer('ImageUrl');">Pick Image</button>
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(m => m.CourseOptions_PromptForCertificationDuringRegistration, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                <div style="border:1px solid lightgray; padding:10px 10px 0px 10px; border-radius:5px; background-color:white">
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_PromptForCertificationDuringRegistration, new { @style = "margin-top:1px;" })
                                            Prompt for certification / rectifiation during registration
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_IncludeStudentToInnstructorRatioOnRoster, new { @style = "margin-top:1px;" })
                                            Include student to instructor ratio on roster
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_IncludeStudentToManikinRatioOnRoster, new { @style = "margin-top:1px;" })
                                            Include student to manikin ratio on roster
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_IncludeElectronicSignatureForAHARoster, new { @style = "margin-top:1px;" })
                                            Include electronic signature for AHA roster
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_UseCertificateNoInsteadofTestScore, new { @style = "margin-top:1px;" })
                                            Use certificate number instead of test score (online course)
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_ShowNumberOfSeatsRemainingOnSchedulePage, new { @style = "margin-top:1px;" })
                                            Show the number of seats remaining on the schedule page
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_AllowStudentToSelectWillCallSchedule, new { @style = "margin-top:1px;" })
                                            Allow students to select "Will call to schedule"
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_PromptForLicenceNumberDuringRegistration, new { @style = "margin-top:1px;" })
                                            prompt for licence number during registration
                                        </label>
                                    </div>
                                    <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                        <label>
                                            @Html.CheckBoxFor(m => m.CourseOptions_AllowAnAlternateDateTimeDescription, new { @style = "margin-top:1px;" })
                                            Allow an alternate date/time description
                                        </label>
                                    </div>


                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.CalendarIconColor, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @{
                                    string color = "";
                                    if (Model != null)
                                    {
                                        color = Model == null ? "" : Model.CalendarIconColor;
                                    }
                                }
                                <p>
                                    <div id="colorSelector">
                                        <div style="background-color:@color ">
                                        </div>
                                    </div>
                                    @Html.Hidden("CalendarIconColor", color)
                                </p>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.CEUCredits, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.CEUCredits, new { @class = "form-control NumberField" })
                                @Html.ValidationMessageFor(m => m.CEUCredits, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(m => m.Description, 7, 0, new { @class = "form-control clientEditor" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmationEmail, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(m => m.ConfirmationEmail, 7, 0, new { @class = "form-control clientEditor" })
                            </div>
                        </div>


                                    {
                                        if (Model != null && Model.CourseTypeID > 0)
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.IsArchive, new { @class = "col-md-2 control-label" })
                                                <div class="col-md-10">
                                                    <div style="border:1px solid lightgray; padding:10px 10px 0px 10px; border-radius:5px; background-color:white">
                                                        <div class="checkbox" style="padding-top: 0px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                                            <label>
                                                                @Html.CheckBoxFor(m => m.IsArchive, new { @style = "margin-top:1px;" })
                                                                Check this box if you no longer intend to use this course type
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        }
                                    }


                        <hr style="border-color:#e8e6e6" />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10 text-right">
                                <a href="/Admin/CourseTypes" class="btn btn-default">Cancel</a>
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>

                                    }
                </section>
            </div>

        </div>
    </div>
    <div class='clear'></div>
