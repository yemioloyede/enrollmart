@model EnrolTraining.Models.Student
@{
    Layout = "~/Views/Shared/_EnrollLayout.cshtml";
}

<script>

			// extend jquery range validator to work for required checkboxes
			var defaultRangeValidator = $.validator.methods.range;
			$.validator.methods.range = function(value, element, param) {
				if(element.type === 'checkbox') {
					// if it's a checkbox return true if it is checked
					return element.checked;
				} else {
					// otherwise run the default validation function
					return defaultRangeValidator.call(this, value, element, param);
				}
			}

			function TryParseInt(str, defaultValue) {
			    var retValue = defaultValue;
			    if (str !== null) {
			        if (str.length > 0) {
			            if (!isNaN(str)) {
			                retValue = parseInt(str);
			            }
			        }
			    }
			    return retValue;
			}



			function SuccessMessage(ajaxContext) {
                
			    //var check = TryParseInt(ajaxContext, 0)

			    //if (check > 0)
			    //{
			    //    window.location.href = "/RegistrationConfirmed?id="+check;
			    //}
			    //else if (ajaxContext == "false")
			    //{
			    //    alert("Something Wrong");
			    //}
			    //else
			    //{
			        $('#MyModelcontainer').html(ajaxContext);
			        $('#MyModel').modal({
			            backdrop: 'static',
			            keyboard: false,
			            show: true
			        });
			    //}
			    
			}

</script>

<script type="text/javascript">
    $(document).ready(function (e) {

        $('input[type=radio]').change(function () {
            var selected = this.value;
            if (selected == "2") {
                $('#CreditCardInfo').show();
                $("[name=SecurityCode]").prop('disabled', false);
                $("[name=CardNo]").prop('disabled', false);
                $("[name=ExpirationMonth]").prop('disabled', false);
                $("[name=ExpirationYear]").prop('disabled', false);
            }
            else {
                $('#CreditCardInfo').hide();
                $("[name=SecurityCode]").prop('disabled', true);
                $("[name=CardNo]").prop('disabled', true);
                $("[name=ExpirationMonth]").prop('disabled', true);
                $("[name=ExpirationYear]").prop('disabled', true);

            }
        });

        $('#PromoCode').focusout(function () {
            var promoCode = $(this).val();
            var classID = @Model.ClassID;
            if (promoCode.length > 0)
            {
                $.ajax({
                    type: "POST",
                    url: '/ValidateAndSetPromoCode',
                    data: JSON.stringify({
                        "PromoCode": promoCode,
                        "ClassID": classID
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        $('#IsAcceptedPromoCode').val(result);
                        if (result == true)
                        {
                            alert('Promo Code Accepted');
                        }
                        else
                        {
                            alert('Promo Code NOT Accepted');
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $('#IsAcceptedPromoCode').val(false);
                        alert('Promo Code NOT Accepted');
                    }
                });
            }
        })

        $(document).on('click', '[type="submit"][data-form-action]', function (event) {
            var $this = $(this);
            var formAction = $this.attr('data-form-action');
            $form = $($this.closest('form'));

            if (formAction == "/CompleteRegistration" || formAction == "/ProceedToPaypal")
            {
                $form.attr('data-ajax', false);
            }

            if ($form.valid())
            {
                $this.button('loading');
            }
            else
            {
                $this.button('reset');
            }
            $form.attr('action', formAction);
        });


        $('#MyModel').on('hidden.bs.modal', function () {
            var $this = $("#reg");
            $this.show();
        })

        $('#MyModel').on('shown.bs.modal', function () {
            var $this = $("#reg");
            $this.hide();
            $this.button('reset');
        })

    });
</script>

<div class="row">
    <div class="col-md-9">
            <div class="row">
                <div class="col-md-12">
                    <section>
                        @using (Ajax.BeginForm("ShowEnrollmentReview", "Enroll", null, new AjaxOptions
                        {
                            HttpMethod = "POST",
                            //InsertionMode = InsertionMode.Replace,
                            //UpdateTargetId = "MyModelcontainer",
                            OnSuccess = "SuccessMessage",
                        }, new { @id = "form1", @class = "form-horizontal" }))
                        {
                            @Html.Hidden("ClassID", Model.ClassID)
                            @Html.Hidden("LocationID", Model.LocationID)
                            @Html.Hidden("CourseType", Model.CourseType)
                            @Html.Hidden("ShowDeliveryOptions", Model.ShowDeliveryOptions)
                            @Html.Hidden("SelectedOptions", Model.SelectedOptions)
                            @Html.Hidden("ShippingCostMaterial", Model.ShippingCostMaterial == null ? 0 : Model.ShippingCostMaterial)
                            @Html.Hidden("KeycodeBankID", (Model.KeycodeBankID == null ? 0 : Model.KeycodeBankID))
                            @Html.Hidden("IsAcceptedPromoCode", false)
                            <h3>
                                Class Enrollment
                            </h3>

                            <hr style="margin-top:5px" />


                            <span>
                                Please complete the following form to reserve your space in this class. You will have an opportunity to review and edit your information after submitting this page.
                            </span>

                            <hr />

                            <h4 class="text-success"> Class Information </h4>

                            <div class="form-group BottomMargin5p">
                                @Html.LabelFor(m => m.CourseName, new { @class = "col-md-2 control-label", @style = "padding-top:0px" })
                                <div class="col-md-10">
                                    @Html.DisplayFor(m => m.CourseName, new { @class = "form-control" })
                                    @Html.Hidden("CourseName", Model.CourseName)
                                </div>
                            </div>

                            <div class="form-group BottomMargin5p">
                                @Html.LabelFor(m => m.ScheduleDate, new { @class = "col-md-2 control-label", @style = "padding-top:0px" })
                                <div class="col-md-10">
                                    <strong>@Model.ScheduleDate.ToString("ddd M/d/yyyy") from @Model.StartTime to @Model.EndTime</strong> 
                                    @{
                                        if (!string.IsNullOrWhiteSpace(Model.ExtraClassTimes))
                                        {
                                            <br />
                                            @Model.ExtraClassTimes
                                        }
                                    }

                                    @Html.Hidden("ScheduleDate", Model.ScheduleDate)
                                    @Html.Hidden("StartTime", Model.StartTime)
                                    @Html.Hidden("EndTime", Model.EndTime)
                                </div>
                            </div>

                            <div class="form-group BottomMargin5p">
                                @Html.LabelFor(m => m.Location, new { @class = "col-md-2 control-label", @style = "padding-top:0px" })
                                <div class="col-md-10">
                                    @Html.DisplayFor(m => m.Location, new { @class = "form-control" })
                                    @Html.Hidden("Location", Model.Location)
                                </div>
                            </div>

                            <div class="form-group BottomMargin5p">
                                @Html.LabelFor(m => m.ClassPrice, new { @class = "col-md-2 control-label", @style = "padding-top:0px" })
                                <div class="col-md-10">
                                    @Html.DisplayFor(m => m.ClassPrice, new { @class = "form-control" })
                                    @Html.Hidden("ClassPrice", Model.ClassPrice)
                                </div>
                            </div>
                            {
                                if (Model.OptionsPrice > 0)
                                {
                                    <div class="form-group BottomMargin5p">
                                        @Html.LabelFor(m => m.OptionsPrice, new { @class = "col-md-2 control-label", @style = "padding-top:0px" })
                                        <div class="col-md-10">
                                            @Html.DisplayFor(m => m.OptionsPrice, new { @class = "form-control" })
                                            @Html.Hidden("OptionsPrice", Model.OptionsPrice)
                                        </div>
                                    </div>
                                }
                            }

                            <div class="form-group">
                                @Html.LabelFor(m => m.PromoCode, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.PromoCode, new { @class = "form-control NumberField" })
                                </div>
                            </div>


                                        {
                                            if (Model.IsPromptCertification)
                                            {
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.PaymentType, new { @class = "col-md-2 control-label" })
                                                    <div class="col-md-10">

                                                        <div class="col-md-3">
                                                            <div class="radio" style="padding-top: 8px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                                                <label>
                                                                    @Html.RadioButtonFor(m => m.CertificationType, "certification", new { @style = "margin-top:3px;" })
                                                                    Certification
                                                                </label>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-3">
                                                            <div class="radio" style="padding-top: 8px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                                                <label>
                                                                    @Html.RadioButtonFor(m => m.CertificationType, "rectification", new { @style = "margin-top:3px;" })
                                                                    Rectification
                                                                </label>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>


                                      }
                                }


                            <hr />

                            <h4 class="text-success"> Student Information </h4>

                            <div class="form-group">
                                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.PrimaryPhone, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.PrimaryPhone, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.PrimaryPhone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.AlternatePhone, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.AlternatePhone, new { @class = "form-control" })
                                </div>
                            </div>

                            <hr />

                            <h4 class="text-success"> Mailing Address </h4>

                            <div class="form-group">
                                @Html.LabelFor(m => m.MailingAddress1, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.MailingAddress1, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.MailingAddress1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.MailingAddress2, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.MailingAddress2, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.MailingCity, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.MailingCity, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.MailingCity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(m => m.MailingState, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.MailingState, DropdownLists.SelectUSAStates(string.IsNullOrWhiteSpace(Model.MailingState) ? "" : Model.MailingState, true, "-Select-"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.MailingState, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(m => m.MailingZip, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.MailingZip, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.MailingZip, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-offset-2 col-md-10">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(m => m.IsBillingSameAsMailing, new { @style = "margin-top:3px", @checked = "checked" })
                                            Use the above address as my billing address
                                        </label>
                                    </div>

                                </div> 
                            </div>

                            <hr />


                            <h4 class="text-success"> Payment Information </h4>

                            <div class="form-group">
                                @Html.LabelFor(m => m.PaymentType, new { @class = "col-md-2 control-label" })
                                <div class="col-md-10">
                                    @{
                                        if (!string.IsNullOrWhiteSpace(Model.PaypalEmail))
                                        {
                                            <div class="col-md-3" style="padding-left:0px">
                                                <div class="radio" style="padding-top: 8px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px; ">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.PaymentType, "1", new { @style = "margin-top:3px;" })
                                                        Paypal
                                                    </label>
                                                </div>
                                            </div>

                                        }
                                    }

                                    <div class="col-md-3">
                                        <div class="radio" style="padding-top: 8px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                            <label>
                                                @Html.RadioButtonFor(m => m.PaymentType, "2", new { @style = "margin-top:3px;" })
                                                Credit Card
                                            </label>
                                        </div>
                                    </div>

                                    @{
                                        if (Model.PayOnArrival)
                                        {
                                            <div class="col-md-3">
                                                <div class="radio" style="padding-top: 8px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                                    <label>
                                                        @Html.RadioButtonFor(m => m.PaymentType, "3", new { @style = "margin-top:3px;" })
                                                        Pay On Arrival
                                                    </label>
                                                </div>
                                            </div>
                                        }

                                    }
                                    @Html.ValidationMessageFor(m => m.PaymentType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div id="CreditCardInfo" style="display:none">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CardNo, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.CardNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.CardNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.ExpirationMonth, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        <div class="col-md-3" style="padding-left:0px; padding-right:10px">
                                            <select name="ExpirationMonth" class="form-control" data-val="true" data-val-required="Card Expired Month?" >
                                                <option value="">MONTH</option>
                                                <option value="01">01</option>
                                                <option value="02">02</option>
                                                <option value="03">03</option>
                                                <option value="04">04</option>
                                                <option value="05">05</option>
                                                <option value="06">06</option>
                                                <option value="07">07</option>
                                                <option value="08">08</option>
                                                <option value="09">09</option>
                                                <option value="10">10</option>
                                                <option value="11">11</option>
                                                <option value="12">12</option>
                                            </select>
                                            <span class="field-validation-valid text-danger" data-valmsg-for="ExpirationMonth" data-valmsg-replace="true"></span>
                                        </div>
                                        <div class="col-md-1" style="padding:0px; width:10px">
                                            <label style="font-size:24px; font-weight:normal">/</label>
                                        </div>
                                        <div class="col-md-3" style="padding-right:10px; padding-left:10px">
                                            <select name="ExpirationYear" class="form-control" data-val="true" data-val-required="Card Expired Year?"  >
                                                <option value="">YEAR</option>
                                                @{
                                                    int year = DateTime.Now.Date.Year;
                                                    for (int i = 0; i < 12; i++)
                                                    {
                                                        <option value="@year">@year</option>
                                                        year++;
                                                    }
                                                }
                                            </select>
                                            <span class="field-validation-valid text-danger" data-valmsg-for="ExpirationYear" data-valmsg-replace="true"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SecurityCode, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(m => m.SecurityCode, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.SecurityCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                                                    {
                                                        if (Model.ShowDeliveryOptions)
                                                        {
                                                            <hr />
                                                            <h4 class="text-success"> Delivery Options </h4>

                                                            if (Model.ShippingDays == 9999)
                                                            {
                                                                @Html.Hidden("DeliveryOption", "Pickup")
                                                                <div class="form-group">
                                                                    <div class="col-md-offset-2 col-md-10">
                                                                        You may pick your materials up at @Html.DisplayFor(m => m.PickupPharase)
                                                                    </div>
                                                                </div>
                                                            }
                                                            else if (Model.ShippingDays == -1)
                                                            {
                                                                @Html.Hidden("DeliveryOption", "Ship")
                                                                <div class="form-group">
                                                                    <div class="col-md-offset-2 col-md-10">
                                                                        Your material will be sent to you at Shipping Charges @Convert.ToDouble(@Model.ShippingCostMaterial).ToString("C")
                                                                    </div>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                if (Model.showShippingInDeliveryOptions)
                                                                {
                                                                    <div class="form-group">
                                                                        <div class="col-md-offset-2 col-md-10">
                                                                            <div class="radio" style="padding-top: 8px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px; ">
                                                                                <label>
                                                                                    @Html.RadioButtonFor(m => m.DeliveryOption, "Pickup", new { @style = "margin-top:3px;", @checked = "checked" })
                                                                                    I will pick the materials up at @Model.PickupPharase
                                                                                </label>
                                                                            </div>
                                                                            <div class="radio" style="padding-top: 8px;margin-bottom: 0px;padding-bottom: 0px;min-height: 0px;">
                                                                                <label>
                                                                                    @Html.RadioButtonFor(m => m.DeliveryOption, "Ship", new { @style = "margin-top:3px;" })
                                                                                    Please send the materials to me me (shipping & handling charges @Convert.ToDouble(@Model.ShippingCostMaterial).ToString("C"))
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                }
                                                                else
                                                                {
                                                                    @Html.Hidden("DeliveryOption", "Pickup")
                                                                    <div class="form-group">
                                                                        <div class="col-md-offset-2 col-md-10">
                                                                            You may pick your materials up at @Html.DisplayFor(m => m.PickupPharase)
                                                                        </div>
                                                                    </div>
                                                                }

                                                            }

                                                        }
                                                    }




                            <hr />
                            <h4 class="text-success"> Additional Information </h4>

                            {
                                EnrolTraining.Context db = new EnrolTraining.Context();
                                string subdomain = Request.Url.Host.Split(new char[] { '.' })[0];
                                int companyid = db.EnrolSetting.Where(x => x.SiteName == subdomain).FirstOrDefault().CompanyID;
                                IEnumerable<EnrolTraining.Models.EnrollQuestion> qs = db.EnrolQuestion.Where(x => x.CompanyID == companyid);
                                if (qs.Count() > 0)
                                {
                                    int i = 0;
                                    foreach (var question in qs)
                                    {
                                        var ans = Model.Answer != null ? Model.Answer[i] : "";
                                        EnrolTraining.Common.EnumModel.EnrollQuestionType qstype = (EnrolTraining.Common.EnumModel.EnrollQuestionType)question.Type;
                                        bool isRequired = question.IsRequiredToAnswer;

                                        <input type="hidden" name="QuestionID[@i]" value="@question.QuestionID" />
                                        <div class="form-group">
                                            <div class="col-md-offset-1 col-md-11">   
                                                <label>@question.Question </label>
                                            </div>
                                            @{
                                                if (qstype == EnrolTraining.Common.EnumModel.EnrollQuestionType.TextBox)
                                                {
                                                    if (isRequired)
                                                    {
                                                        <div class="col-md-offset-1 col-md-11">
                                                            <input class="form-control" data-val="true" data-val-required="This field is required" id="Answer" @i name="Answer[@i]" type="text" value="@ans">
                                                            <span class="text-danger" data-valmsg-for="Answer[@i]" data-valmsg-replace="true"></span>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-md-offset-1 col-md-11">
                                                            <input class="form-control" id="Answer" @i name="Answer[@i]" type="text" value="@ans">
                                                        </div>
                                                    }
                                                }
                                                else if (qstype == EnrolTraining.Common.EnumModel.EnrollQuestionType.DropDown)
                                                {
                                                    List<string> lstAnswersChoices = question.Answers.Split(',').ToList();
                                                    if (isRequired)
                                                    {
                                                        <div class="col-md-offset-1 col-md-11">
                                                            <select class="form-control" data-val="true" data-val-required="This field is required" id="Answer" @i name="Answer[@i]" >
                                                                <option>-Choose-</option>
                                                                    @foreach (var choice in lstAnswersChoices)
                                                                    {
                                                                        if (choice == ans)
                                                                        {
                                                                            <option selected="selected" value="@choice">@choice</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@choice">@choice</option>
                                                                        }

                                                                    }
                                                            </select>
                                                            <span class="text-danger" data-valmsg-for="Answer[@i]" data-valmsg-replace="true"></span>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="col-md-offset-1 col-md-11">
                                                            <select class="form-control" id="Answer" @i name="Answer[@i]" >
                                                                <option>-Choose-</option>
                                                                    @foreach (var choice in lstAnswersChoices)
                                                                    {
                                                                        if (choice == ans)
                                                                        {
                                                                            <option selected="selected" value="@choice">@choice</option>
                                                                        }
                                                                        else
                                                                        {
                                                                            <option value="@choice">@choice</option>
                                                                        }

                                                                    }
                                                            </select>

                                                        </div>

                                                    }

                                                }

                                                i++;
                                        }
                                        </div>

                                                    }

                                                }
                            }

                            <div class="form-group">
                                <div class="col-md-offset-1 col-md-11">
                                    <label>Please include any comments or special requests here:</label>
                                </div>

                                <div class="col-md-offset-1 col-md-11">
                                    @Html.TextAreaFor(m => m.Comments, new { @class = "form-control", @style = "max-width:70%" })
                                </div>
                            </div>

                            <hr />
                            <h4 class="text-success"> Terms & Conditions </h4>

                            <div class="form-group">

                                <div class="col-md-offset-1 col-md-11">
                                    <div style="width: 70%; height: 100px; border: 1px solid gainsboro; margin-bottom: 5px; background-color: white; padding: 4px; font-size: 13px; color: #000; line-height: normal; overflow: auto; -webkit-overflow-scrolling: touch; font-family: Arial, Helvetica, sans-serif;">
                                        <p>Terms and Conditions</p>
                                        <ul>
                                            <li>We do know that emergencies happen; students may reschedule registered courses for whatever reason, provided they give us 24 –hours’ prior notice before the scheduled class. We offer no refunds. Please notify us via email or phone if you’re unable to attend. We encourage students to be early. Students who are more than 15 minutes late to scheduled class will be turned away and asked to reschedule.</li>
                                            <li>We charge $25 for the processing of any replacement card.&nbsp;</li>
                                            <li>Course books are mandatory, the American Heart Association requires that each student has a course textbook before, during, and after the course certification for reference use. Certification cards cannot be issued to students without a book present in class.</li>
                                            <li>Book prices are fixed and any promotional code applies to classroom instructions only.</li>
                                        </ul>
                                    </div>
                                </div>

                                <div class="col-md-offset-1 col-md-11">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(m => m.TermsAndConditionAgreed, new { @style = "margin-top:3px" })
                                            I have read and agree to the above terms and conditions
                                        </label>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.TermsAndConditionAgreed, "", new { @class = "text-danger" })

                                </div>

                            </div>

                                            <hr />
                                            <div class="form-group">

                                                <div class="col-md-offset-2 col-md-10 text-right">
                                                    <button type="submit" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Processing..." id="reg" data-form-action="/ShowEnrollmentReview" class="btn btn-success" >Continue Registration</button>
                                                </div>
                                            </div>

                                            <div class="modal fade" tabindex="-1" id="MyModel" aria-hidden="true">
                                                <div id="MyModelcontainer"></div>
                                            </div>

                               }
                    </section>
                </div>
            </div>
            <hr />

    </div>
    @{
        Html.RenderAction("RegistrationRightPanel", "Enroll");
    }
</div>


